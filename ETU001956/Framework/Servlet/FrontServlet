import etu001956.framework.ModelView;
import com.google.gson.Gson;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;


public class FrontServlet extends HttpServlet {

    protected void service(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        if (request.getMethod().equals("GET")) {
            // Gérer la requête GET
            // Exemple : Rediriger la requête vers une page JSP pour l'affichage
            request.getRequestDispatcher("/WEB-INF/views/emp.jsp").forward(request, response);
        } else if (request.getMethod().equals("POST")) {
            // Gérer la requête POST
            // Exemple : Traiter les données du formulaire et effectuer les actions nécessaires
            String name = request.getParameter("name");
            int age = Integer.parseInt(request.getParameter("age"));
            String dept = request.getParameter("dept");
            double salaire = Double.parseDouble(request.getParameter("salaire"));

            // Créer un objet Emp et setter les valeurs
            Emp emp = new Emp();
            emp.setName(name);
            emp.setAge(age);
            emp.setDept(dept);
            emp.setSalaire(salaire);

            // Récupérer le fichier uploadé
            Part filePart = request.getPart("file");
            String fileName = filePart.getSubmittedFileName();
            String fileDir = "D:/uploads"; // Répertoire de stockage des fichiers
            String filePath = fileDir + "/" + fileName;

            // Enregistrer le fichier sur le serveur
            try (InputStream inputStream = filePart.getInputStream();
                 OutputStream outputStream = new FileOutputStream(new File(filePath))) {
                byte[] buffer = new byte[4096];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    outputStream.write(buffer, 0, bytesRead);
                }
            } catch (IOException e) {
                e.printStackTrace();
            }

            // Créer un objet UploadFile avec les informations du fichier
            UploadFile uploadFile = new UploadFile(fileName, filePath, filePart.getSize());

            // Setter l'objet UploadFile dans l'objet Emp
            emp.setUploadFile(uploadFile);

            // Définir l'objet Emp en tant qu'attribut de la requête
            request.setAttribute("emp", emp);

            // Créer un objet ModelView
            ModelView modelView = new ModelView();

            // Vérifier si l'attribut boolean est true
            if (yourBooleanAttribute) {
                // Ajouter la HashMap à l'objet ModelView
                modelView.setData(emp.getAttributes());

                // Convertir la HashMap en JSON
                Gson gson = new Gson();
                String json = gson.toJson(modelView.getData());

                // Utiliser la réponse pour envoyer le JSON
                response.setContentType("application/json");
                response.setCharacterEncoding("UTF-8");
                response.getWriter().write(json);
            } else {
                // Procéder normalement
                // ...

                // Rediriger vers la page de succès
                request.getRequestDispatcher("success.jsp").forward(request, response);
            }
        }
    }
}
