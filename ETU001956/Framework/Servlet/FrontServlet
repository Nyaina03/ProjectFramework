package etu001956.framework.servlet;

import etu001956.framework.Mapping;
import etu001956.framework.ModelView;
import etu001956.framework.annotation.Url;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.Map;

public class FrontServlet extends HttpServlet {
    private HashMap<String, Mapping> mappingUrls;

    @Override
    public void init() throws ServletException {
        mappingUrls = new HashMap<>();
        Class<?> empClass = null;

        try {
            empClass = Class.forName("etu001956.test_framework.Emp");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }

        if (empClass != null) {
            Method[] methods = empClass.getDeclaredMethods();

            for (Method method : methods) {
                if (method.isAnnotationPresent(Url.class)) {
                    Url urlAnnotation = method.getAnnotation(Url.class);
                    String url = urlAnnotation.value();
                    mappingUrls.put(url, new Mapping(empClass.getSimpleName(), method.getName()));
                }
            }
        }

        super.init();
    }

    protected void service(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String requestUrl = request.getRequestURI();

        Mapping mapping = mappingUrls.get(requestUrl);

        if (mapping != null) {
            String className = mapping.getClassName();
            String methodName = mapping.getMethodName();

            try {
                Class<?> clazz = Class.forName(className);
                Method method = clazz.getDeclaredMethod(methodName);
                Object instance = clazz.newInstance();

                Object result = method.invoke(instance);

                if (result instanceof ModelView) {
                    ModelView modelView = (ModelView) result;
                    String viewUrl = modelView.getViewUrl();

                    Map<String, Object> data = modelView.getData();

                    for (String key : data.keySet()) {
                        Object value = data.get(key);
                        request.setAttribute(key, value);
                    }

                    request.getRequestDispatcher(viewUrl).forward(request, response);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            response.sendError(HttpServletResponse.SC_NOT_FOUND);
        }
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String value1 = request.getParameter("input1");
        String value2 = request.getParameter("input2");

        // Faites le traitement nécessaire avec les valeurs récupérées du formulaire

        // Par exemple, ajoutez-les à un objet ModelView
        ModelView modelView = new ModelView();
        modelView.addItem("key1", value1);
        modelView.addItem("key2", value2);
        modelView.setViewUrl("target.jsp");

        // Ajoutez l'objet ModelView à la requête
        request.setAttribute("modelView", modelView);

        // Dispatchez la requête à la vue appropriée
        request.getRequestDispatcher("target.jsp").forward(request, response);
    }
}
